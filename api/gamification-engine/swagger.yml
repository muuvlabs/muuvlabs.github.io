swagger: "2.0"
info:
  description: "This API covers the Gamification Engine, which includes the Loyalty, Streaks, Badges, etc."
  version: "1.0.0"
  title: "Gamification Engine API"
  contact:
    email: "micah@vi.co"
host: "clientname.vi.co"
basePath: "/"
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  jwt:
    type: "apiKey"
    name: "x-ge-jwt"
    in: "header"
security:
- jwt: []
parameters:
  xBrand:
    in: "header"
    name: "x-ge-brand"
    type: "string"
    description: "The brand code, like `su` or `af`."
  xJwt:
    in: "header"
    name: "x-ge-jwt"
    type: "string"
    description: "The JWT token that was passed into the SDK when initializing. We'll use this to verify the member is real and get the member ID for accessing their information from the remote system."
  xLanguage:
    in: "header"
    name: "x-ge-language"
    type: "string"
    description: "The locale, with language and region codes, in the format of `language-region`, or just the language.\nExamples: `en-GB`, `en`, `es-AR`. Default is `en-US`."
  xClient:
    in: "header"
    name: "x-ge-client"
    type: "string"
    description: "Follows the format of `app_platform_major_minor_patch`.\nExamples:\n`sdk_ios_0_5_1`\n`sudna_web_2022_30_3`"
  xTimezone:
    in: "header"
    name: "x-ge-timezone"
    type: "string"
    description: "Timezone in the string format, like `America/Los_Angeles`. Default is `America/Chicago`."
  xAppId:
    in: "header"
    name: "x-ge-app-id"
    type: "string"
    description: "Used if doing server-to-server communication. You will be provided an App ID for each environment."
  xApiKey:
    in: "header"
    name: "x-ge-api-key"
    type: "string"
    description: "Used if doing server-to-server communication. You will be provided an API Key for eah environment."
  xAdminJwt:
    in: "header"
    name: "x-jwt"
    type: "string"
    description: "The shared JWT token used across the Admin tool."
tags:
- name: "assets"
  description: "Asset uploading"
- name: "brands"
  description: "Settings for each Brand"
- name: "challenges"
  description: "Challenge Info"
- name: "configs"
  description: "Config for the apps"
- name: "events"
  description: "Event data for a user, like steps updates"
- name: "users"
  description: "Info and settings about the users"
- name: "webhooks"
  description: "Server-to-Server Data"
- name: "wins"
  description: "Achievements the user has earned, like streaks or badges"
paths:
  /ge/assets:
    get:
      tags:
      - "assets"
      summary: "Admins: List assets"
      description: "To see posters for a Challenge, Badge, or Streak."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "asset_type"
        in: "formData"
        type: "string"
        description: "Possible values: `image` | `text` | `audio` | `video`"
        enum:
          - "image"
          - "text"
          - "audio"
          - "video"
      - name: "slot"
        in: "formData"
        type: "string"
        description: "Maps directly to the foreign key name, like `poster_id`. Only used for poster, so far. Possible values: `poster`"
        enum:
          - "poster"
      - name: "assetable_type"
        in: "formData"
        type: "string"
        description: "The model name that this asset goes to, like `Challenge`."
      - name: "assetable_id"
        in: "formData"
        type: "string"
        description: "The ID of the resources that this asset goes to, like `123`. Use with the 'assetable_id' field above."
      - name: "file"
        in: "formData"
        type: "file"
        description: "The file to upload."
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Asset"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "assets"
      summary: "Admins: Upload an asset (poster) to a resource."
      description: "To add a poster to a Challenge, Badge, or Streak."
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "asset_type"
        in: "formData"
        type: "string"
        description: "Possible values: `image` | `text` | `audio` | `video`"
        enum:
          - "image"
          - "text"
          - "audio"
          - "video"
      - name: "slot"
        in: "formData"
        type: "string"
        description: "Maps directly to the foreign key name, like `poster_id`. Only used for poster, so far. Possible values: `poster`"
        enum:
          - "poster"
      - name: "assetable_type"
        in: "formData"
        type: "string"
        description: "The model name that this asset goes to, like `Challenge`."
      - name: "assetable_id"
        in: "formData"
        type: "string"
        description: "The ID of the resources that this asset goes to, like `123`. Use with the 'assetable_id' field above."
      - name: "file"
        in: "formData"
        type: "file"
        description: "The file to upload."
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Asset"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/assets/{assetId}:
    get:
      tags:
      - "assets"
      summary: "Admins: Show Asset by ID"
      description: "Specific Asset to view"
      parameters:
      - name: "assetId"
        in: "path"
        description: "ID of the Asset to return"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Asset"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "assets"
      summary: "Admins: Deletes an asset"
      description: "Paranoid delete: sets the deleted_at to the timestamp"
      parameters:
      - name: "assetId"
        in: "path"
        description: "ID of asset to delete"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Asset"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/brands:
    get:
      tags:
      - "brands"
      summary: "Admins: Get all brands"
      description: "Returns results for all the brands in the system"
      parameters:
      - name: "page"
        in: "query"
        description: "The page of results to show. Default is 1"
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "The number of results to show for each page. Default is 10"
        required: false
        type: "string"
      - name: "enabled"
        in: "query"
        description: "For viewing the brands that are enabled or not, or all brands. Default is to show all brands."
        required: false
        type: "string"
        enum:
        - "all"
        - "1"
        - "0"
        default: "all"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/BrandResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/brands/{brandIdent}:
    get:
      tags:
      - "brands"
      summary: "Admins: Find brand by short code string"
      description: "We're using the code instead of the integer as the primary identifier. So using 'su', 'tbm', or 'af'"
      parameters:
      - name: "brandIdent"
        in: "path"
        description: "Short code of brand to return"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Brand"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "brands"
      summary: "Admins: Update brand by short code string"
      description: "We're using the code instead of the integer as the primary identifier. So using 'su', 'tbm', or 'af'"
      parameters:
      - name: "brandIdent"
        in: "path"
        description: "Short code of brand to update"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Brand"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/challenges:
    get:
      tags:
      - "challenges"
      summary: "List Challenges"
      description: "Returns results for all the challenges in the system that the user has access to see"
      parameters:
      - name: "page"
        in: "query"
        description: "The page of results to show. Default is 1"
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "The number of results to show for each page. Default is 10"
        required: false
        type: "string"
      - name: "enabled"
        in: "query"
        description: "For viewing the challenges that are enabled or not, or all challenges. Default is to show all challenges."
        required: false
        type: "string"
        enum:
        - "all"
        - "1"
        - "0"
        default: "all"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ChallengeResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "challenges"
      summary: "Admins: Create Challenge"
      description: "For creating a new challenge"
      parameters:
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Challenge"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/challenges/{challengeId}:
    get:
      tags:
      - "challenges"
      summary: "Show Challenge by ID"
      description: "Display info for a specific Challenge"
      parameters:
      - name: "challengeId"
        in: "path"
        description: "ID of the Challenge to return"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Challenge"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "challenges"
      summary: "Admins: Update Challenge"
      description: "Change the settings of a challenge"
      parameters:
      - name: "challengeId"
        in: "path"
        description: "ID of the Challenge to update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Challenge"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "challenges"
      summary: "Admins: Delete Challenge"
      description: "For deleting a challenge"
      parameters:
      - name: "challengeId"
        in: "path"
        description: "ID of the Challenge to delete"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Challenge"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/configs/app:
    get:
      tags:
      - "configs"
      summary: "App Config"
      description: "This contains colors, fonts, and translations for a specific brand's app"
      parameters:
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ConfigsApp"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/events:
    post:
      tags:
      - "events"
      summary: "Posting User Event Data"
      description: "This will be the endpoint that is most used, for when sending updates to the server for when a user completes some action or has some sort of progress."
      parameters:
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebhookResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/users:
    get:
      tags:
      - "users"
      summary: "Admin: List users"
      description: "Returns results for all the users in the system that the admin has access to"
      parameters:
      - name: "brands"
        in: "query"
        description: "Dash-delimited list of brand idents to include, as long as the user has read rights to the brand. If this is blank, then it will include all of the brands that the user has read rights to. Example: `su-tbm`"
        required: false
        type: "string"
      - name: "term"
        in: "query"
        description: "Search term to find a user with"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "The page of results to show. Default is 1"
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "The number of results to show for each page. Default is 10"
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/users/me:
    get:
      tags:
      - "users"
      summary: "Show user info for logged-in user"
      description: "Get a specific user's info"
      parameters:
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/users/{userId}:
    get:
      tags:
      - "users"
      summary: "Admin: Find user by ID"
      description: "Get a specific user's info"
      parameters:
      - name: "userId"
        in: "path"
        description: "ID of user to return"
        required: true
        type: "integer"
        format: "int64"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/webhooks/{brandIdent}:
    post:
      tags:
      - "webhooks"
      summary: "For server-to-server sending of data"
      description: "This will be used to update us that there's been a change in data for PT sessions, door swipes, or anything else."
      parameters:
      - name: "brandIdent"
        in: "path"
        description: "The brand code, like `su` or `af`"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WebhookResponse"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/wins:
    get:
      tags:
      - "wins"
      summary: "List Wins"
      description: "Returns results for all the user wins"
      parameters:
      - name: "page"
        in: "query"
        description: "The page of results to show. Default is 1"
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "The number of results to show for each page. Default is 10"
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/WinResults"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    post:
      tags:
      - "wins"
      summary: "Admins: Create Win"
      description: "For creating a new win"
      parameters:
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Win"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
  /ge/wins/{winId}:
    get:
      tags:
      - "wins"
      summary: "Show Win by ID"
      description: "Display info for a specific Win"
      parameters:
      - name: "winId"
        in: "path"
        description: "ID of the Win to return"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Win"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    put:
      tags:
      - "wins"
      summary: "Admins: Update Win"
      description: "Change the editable settings of a Win"
      parameters:
      - name: "winId"
        in: "path"
        description: "ID of the Win to update"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Win"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
    delete:
      tags:
      - "wins"
      summary: "Admins: Delete Win"
      description: "For deleting a Win"
      parameters:
      - name: "winId"
        in: "path"
        description: "ID of the Win to delete"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xTimezone'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      - $ref: '#/parameters/xAdminJwt'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Win"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not found"
definitions:
  Asset:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Asset"
      id:
        type: "integer"
      name:
        type: "string"
      filename:
        type: "string"
      base_filename:
        type: "string"
      file_size:
        type: "integer"
      file_type:
        type: "string"
      asset_type:
        type: "string"
      slot:
        type: "string"
      assetable_type:
        type: "string"
      assetable_id:
        type: "integer"
      media:
        type: "string"
      uuid:
        type: "string"
  BrandResults:
    type: "object"
    properties:
      page:
        type: "integer"
        format: "int32"
      per_page:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int32"
      total_pages:
        type: "integer"
        format: "int32"
      results:
        type: "array"
        items:
          $ref: "#/definitions/Brand"
  Brand:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Brand"
      id:
        type: "integer"
        format: "int32"
      ident:
        type: "string"
      name:
        type: "string"
      is_enabled:
        type: "boolean"
        default: false
      created_int:
        type: "integer"
        format: "int32"
      updated_int:
        type: "integer"
        format: "int32"
  ChallengeResults:
    type: "object"
    properties:
      page:
        type: "integer"
        format: "int32"
      per_page:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int32"
      total_pages:
        type: "integer"
        format: "int32"
      results:
        type: "array"
        items:
          $ref: "#/definitions/Challenge"
  Challenge:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Challenge"
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      description:
        type: "string"
      poster_id:
        type: "integer"
        format: "int32"
      poster_url:
        type: "string"
      rules:
        type: "object"
      created_int:
        type: "integer"
        format: "int32"
      updated_int:
        type: "integer"
        format: "int32"
  ConfigsApp:
    type: "object"
    properties:
      colors:
        type: "object"
      features:
        type: "object"
      translations:
        type: "object"
  UserResults:
    type: "object"
    properties:
      page:
        type: "integer"
        format: "int32"
      per_page:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int32"
      total_pages:
        type: "integer"
        format: "int32"
      results:
        type: "array"
        items:
          $ref: "#/definitions/User"
  User:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "User"
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      brand_id:
        type: "integer"
        format: "int32"
      brand_ident:
        type: "string"
      brand_name:
        type: "string"
      brand_user_id:
        type: "string"
      email:
        type: "string"
      first_name:
        type: "string"
      last_name:
        type: "string"
      created_int:
        type: "integer"
        format: "int32"
      updated_int:
        type: "integer"
        format: "int32"
  WebhookResponse:
    type: "object"
    properties:
      ok:
        type: "boolean"
        default: true
  WinResults:
    type: "object"
    properties:
      page:
        type: "integer"
        format: "int32"
      per_page:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int32"
      total_pages:
        type: "integer"
        format: "int32"
      results:
        type: "array"
        items:
          $ref: "#/definitions/Win"
  Win:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Win"
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      win_type:
        type: "string"
      win_int:
        type: "integer"
        format: "int32"
      created_int:
        type: "integer"
        format: "int32"
      updated_int:
        type: "integer"
        format: "int32"