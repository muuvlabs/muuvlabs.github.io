swagger: "2.0"
info:
  description: "This Nutrition Tracker service handles a way for members to log the food that they are eating."
  version: "1.0.0"
  title: "SEB Nutrition Tracker API"
  contact:
    email: "micah@muuvlabs.com"
host: "nutrition.sebrands.com"
basePath: "/"
tags:
- name: "configs"
  description: "The app config and translations"
- name: "days"
  description: "Summary of days with meals"
- name: "meals"
  description: "The meals for a specific user"
- name: "meal_foods"
  description: "The specific food in a meal"
- name: "search"
  description: "For returning food search results"
schemes:
- "https"
paths:
  /nutrition/configs/app:
    get:
      tags:
      - "configs"
      summary: "App Config"
      description: "This contains colors, fonts, and translations for a specific brand's app"
      operationId: "configsApp"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xClient'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Config"
  /nutrition/days/me/{date}:
    get:
      tags:
      - "days"
      summary: "Show the day's info"
      description: "This is just for viewing the day info. It will not create or update this day if it does not exist. Because this is for the logged-in user, the `x-nt-brand` and `x-nt-jwt` headers are required."
      operationId: "daysMeShow"
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can be `meals` and/or `foods` Example: `?include=meals-foods`"
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Day"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
    put:
      tags:
      - "days"
      summary: "Update or Create the day's info"
      description: "Even though this a PUT, it will create the record for the Day if one doesn't exist for this user on the given day. Because this is for the logged-in user, the `x-nt-brand` and `x-nt-jwt` headers are required."
      operationId: "daysMeUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "date"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can be `meals` and/or `foods`. Example: `?include=meals-foods`"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            calories_goal:
              type: "number"
            carbs_goal:
              type: "number"
            protein_goal:
              type: "number"
            fiber_goal:
              type: "number"
            fat_goal:
              type: "number"
            water_goal:
              type: "number"
            water:
              type: "number"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Day"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/days/{brandIdent}/{userId}/{date}:
    get:
      tags:
      - "days"
      summary: "Show the day's info for a member"
      description: "This request is meant for coaches, when viewing a member's day. The `x-nt-app-id` and `x-nt-api-key` headers will be required."
      operationId: "daysUserShow"
      produces:
      - "application/json"
      parameters:
      - name: "brandIdent"
        in: "path"
        description: "The brand code, like `su` or `af`."
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "The user id in the remote system."
        required: true
        type: "string"
      - name: "date"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can be `meals` and/or `foods` Example: `?include=meals-foods`"
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Day"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
    put:
      tags:
      - "days"
      summary: "Update the day info for a specific member"
      description: "This request is meant for coaches, when viewing or updating a member's day. If this day doesn't exist for the member, then it will be created. The `x-nt-app-id` and `x-nt-api-key` headers will be required."
      operationId: "daysUserUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "brandIdent"
        in: "path"
        description: "The brand code, like `su` or `af`."
        required: true
        type: "string"
      - name: "userId"
        in: "path"
        description: "The user id in the remote system."
        required: true
        type: "string"
      - name: "date"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can be `meals` and/or `foods`. Example: `?include=meals-foods`"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            calories_goal:
              type: "number"
            carbs_goal:
              type: "number"
            protein_goal:
              type: "number"
            fiber_goal:
              type: "number"
            fat_goal:
              type: "number"
            water_goal:
              type: "number"
            water:
              type: "number"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Day"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/meals:
    post:
      tags:
      - "meals"
      summary: "Create a new meal"
      description: "This will create a meal for a certain date for the logged-in user. Because this is for the logged-in user, the `x-nt-brand` and `x-nt-jwt` headers are required."
      operationId: "mealsCreate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can only be `foods`. Example: `?include=foods`"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            date:
              type: "string"
              default: "YYYY-MM-DD"
            meal_ident:
              type: "string"
              default: "dinner"
            foods:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                  consumed_amount:
                    type: "number"
                  consumed_unit:
                    type: "string"
                  consumed_grams:
                    type: "number"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meal"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/meals/{mealId}:
    get:
      tags:
      - "meals"
      summary: "Show the meal info"
      description: "This is just for viewing the meal info. This request may be made by either a member or a coach. Because it can be either, the `x-nt-brand` and `x-nt-jwt` headers are NOT required."
      operationId: "mealsShow"
      produces:
      - "application/json"
      parameters:
      - name: "mealId"
        in: "path"
        description: "Unique integer ID for this meal"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can only be `foods`. Example: `?include=foods`"
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meal"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
    put:
      tags:
      - "meals"
      summary: "Update the meal info"
      description: "This is mostly just used to add more foods to the meal."
      operationId: "mealsUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "mealId"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - name: "include"
        in: "query"
        description: "Dash-delimited list of associated records include. Can only be `foods`. Example: `?include=foods`"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            foods:
              type: "array"
              items:
                type: "object"
                properties:
                  id:
                    type: "integer"
                  consumed_amount:
                    type: "number"
                  consumed_unit:
                    type: "string"
                  consumed_grams:
                    type: "number"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Meal"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/meal_foods/{mealFoodId}:
    get:
      tags:
      - "meal_foods"
      summary: "Show the food info inside of a meal"
      description: "This is just for viewing the meal/food info. This may not be used at all, but including it just in case it is needed."
      operationId: "mealFoodsShow"
      produces:
      - "application/json"
      parameters:
      - name: "mealFoodId"
        in: "path"
        description: "Unique integer ID for this meal"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MealFood"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
    delete:
      tags:
      - "meal_foods"
      summary: "Remove this food from the meal"
      description: "This is how a food is deleted out of a meal."
      operationId: "mealFoodsDestroy"
      produces:
      - "application/json"
      parameters:
      - name: "mealFoodId"
        in: "path"
        description: "Date identifier in YYYY-MM-DD format. Example `2022-05-31`"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MealFood"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/search:
    get:
      tags:
      - "search"
      summary: "Returns foods, meals, or recipes"
      description: "This is just for viewing the meal/food info. This may not be used at all, but including it just in case it is needed."
      operationId: "searchIndex"
      produces:
      - "application/json"
      parameters:
      - name: "tab"
        in: "query"
        description: "One of: `all`, `my_foods`, `my_meals`, `recipes`."
        required: false
        type: "string"
        default: "all"
      - name: "term"
        in: "query"
        description: "The search query that the user entered."
        required: false
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SearchResults"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
  /nutrition/search/upc/{upcCode}:
    get:
      tags:
      - "search"
      summary: "Returns a food or 404"
      description: "After scanning a barcode, you should have a numerical UPC code to use in the request. Returns a Food object if it's found, or a 404 if not."
      operationId: "searchUpc"
      produces:
      - "application/json"
      parameters:
      - name: "upcCode"
        in: "path"
        description: "Numerical UPC code"
        required: true
        type: "string"
      - $ref: '#/parameters/xBrand'
      - $ref: '#/parameters/xJwt'
      - $ref: '#/parameters/xLanguage'
      - $ref: '#/parameters/xClient'
      - $ref: '#/parameters/xAppId'
      - $ref: '#/parameters/xApiKey'
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Food"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/Unauthorized"
        "404":
          description: "Not found"
parameters:
  xBrand:
    in: "header"
    name: "x-nt-brand"
    type: "string"
    description: "The brand code, like `su` or `af`"
  xJwt:
    in: "header"
    name: "x-nt-jwt"
    type: "string"
    description: "The JWT token that was passed into the SDK when initializing"
  xLanguage:
    in: "header"
    name: "x-nt-language"
    type: "string"
    description: "The locale, with language and region codes"
  xClient:
    in: "header"
    name: "x-nt-client"
    type: "string"
    description: "Follows the format of `app_platform_major_minor_patch`.\nExamples:\n`sdk_ios_0_5_1`\n`sudna_web_3_7_1`"
  xAppId:
    in: "header"
    name: "x-nt-app-id"
    type: "string"
    description: "Used if doing server-to-server communication."
  xApiKey:
    in: "header"
    name: "x-nt-api-key"
    type: "string"
    description: "The JWT token that was passed into the SDK when initializing"
definitions:
  Food:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Food"
      id:
        type: "integer"
      name:
        type: "string"
      servings:
        type: "array"
        items:
          type: "object"
          properties:
            unit:
              type: "string"
            grams:
              type: "number"
      nutrition_unit:
        type: "string"
      calories:
        type: "number"
      fat:
        type: "number"
      fat_saturated:
        type: "number"
      cholesterol:
        type: "number"
      sodium:
        type: "number"
      carbs:
        type: "number"
      fiber:
        type: "number"
      sugar:
        type: "number"
      protein:
        type: "number"
      photo:
        type: "string"
      nix_food_name:
        type: "string"
      nix_brand_id:
        type: "string"
      nix_brand_name:
        type: "string"
      nix_item_id:
        type: "string"
      nix_item_name:
        type: "string"
      created_int:
        type: "integer"
      updated_int:
        type: "integer"
  Meal:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Meal"
      id:
        type: "integer"
      date:
        type: "string"
      member_id:
        type: "integer"
      meal_ident:
        type: "string"
      meal_icon:
        type: "string"
      calories:
        type: "number"
      fat:
        type: "number"
      fat_saturated:
        type: "number"
      cholesterol:
        type: "number"
      sodium:
        type: "number"
      carbs:
        type: "number"
      fiber:
        type: "number"
      sugar:
        type: "number"
      protein:
        type: "number"
      created_int:
        type: "integer"
      updated_int:
        type: "integer"
      foods:
        type: "array"
        items:
          $ref: "#/definitions/MealFood"
  MealFood:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "MealFood"
      id:
        type: "integer"
      food_id:
        type: "integer"
      name:
        type: "string"
      consumed_amount:
        type: "number"
      consumed_unit:
        type: "string"
      consumed_grams:
        type: "number"
      consumed_fl_oz:
        type: "number"
      calories:
        type: "number"
      fat:
        type: "number"
      fat_saturated:
        type: "number"
      cholesterol:
        type: "number"
      sodium:
        type: "number"
      carbs:
        type: "number"
      fiber:
        type: "number"
      sugar:
        type: "number"
      protein:
        type: "number"
      created_int:
        type: "integer"
      updated_int:
        type: "integer"
  Day:
    type: "object"
    properties:
      class_name:
        type: "string"
        default: "Day"
      id:
        type: "integer"
      date:
        type: "string"
      member_id:
        type: "integer"
      brand_ident:
        type: "string"
      brand_name:
        type: "string"
      brand_user_id:
        type: "string"
      brand_alt_id:
        type: "string"
      calories_goal:
        type: "number"
      carbs_goal:
        type: "number"
      protein_goal:
        type: "number"
      fiber_goal:
        type: "number"
      fat_goal:
        type: "number"
      water_goal:
        type: "number"
      calories:
        type: "number"
      fat:
        type: "number"
      fat_saturated:
        type: "number"
      cholesterol:
        type: "number"
      sodium:
        type: "number"
      carbs:
        type: "number"
      fiber:
        type: "number"
      sugar:
        type: "number"
      protein:
        type: "number"
      water:
        type: "number"
      meals:
        type: "object"
        properties:
          breakfast:
            type: "object"
          lunch:
            type: "object"
          dinner:
            type: "object"
          snacks:
            type: "object"
      created_int:
        type: "integer"
      updated_int:
        type: "integer"
  Config:
    type: "object"
    properties:
      colors:
        type: "object"
        properties:
          light_mode_colors:
            type: "object"
          dark_mode_colors:
            type: "object"
      features:
        type: "object"
      translations:
        type: "object"
  SearchResults:
    type: "object"
    properties:
      tab:
        type: "string"
      term:
        type: "string"
      sections:
        type: "array"
        items:
          type: "object"
          properties:
            name:
              type: "string"
            results:
              type: "array"
              items:
                type: "object"
  Unauthorized:
    type: "object"
    properties:
      status_code:
        type: "integer"
        default: 401
      type:
        type: "string"
        default: "unauthorized"
      message:
        type: "string"
        default: "401 Unauthorized"
